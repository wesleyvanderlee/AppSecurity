package com.wesley.VulnerabilityAlgorithm;

import java.util.ArrayList;

import com.bunq.apk.apkinfo;
import com.wesley.graph.Graph;
import com.wesley.graph.Vertex;

public class ImproperPlatformUsage extends VulnerabilityIdentificationAlgorithm {

	public ImproperPlatformUsage() {
		super("ImproperPlatformUsage", "");
	}

	public void identify(Graph graph, apkinfo apkinfo) {
		this.setIdentified(0);
		ArrayList<String> callableActivities = apkinfo.getPublicAPK().getCallableActivitiesMinusStart();
		if (callableActivities.isEmpty()) {
			return;
		}
		for (Vertex v : graph.getVertexes()) {
			int state = Integer.parseInt(v.getId());
			if (state == 0)
				continue;
		
			String activity = v.getActivity();
			if (callableActivities.contains(activity)) {
				callableActivities.remove(activity);
				if(callableActivities.isEmpty())
					return;
			}
			
		}
		// All states are checked
		if (!callableActivities.isEmpty()) {
			findings.add("The following activities are callable but not modeled: " + callableActivities.toString());
			this.setIdentified(1); // Likely vulnerability is present
		}
	}
}
