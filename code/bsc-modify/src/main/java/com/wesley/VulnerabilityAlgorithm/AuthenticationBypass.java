package com.wesley.VulnerabilityAlgorithm;

import java.util.ArrayList;
import java.util.List;

import com.bunq.apk.apkinfo;
import com.wesley.graph.Edge;
import com.wesley.graph.Graph;
import com.wesley.graph.Vertex;

public class AuthenticationBypass extends VulnerabilityIdentificationAlgorithm {

	public AuthenticationBypass() {
		super("AuthenticationBypass", "");
	}

	public void identify(Graph graph, apkinfo apkinfo) {
		this.setIdentified(0);
		for (Vertex v : graph.getVertexes()) {
			if (v.isLogin()) {
				int id = Integer.parseInt(v.getId());

				List<Edge> out = graph.getEdgesForSource(v);
				List<Vertex> des = new ArrayList<Vertex>();
				for (Edge ed : out) {
					if (!ed.getLabel().contains("NOTFOUND"))
						des.add(ed.getDestination());
				}
				Graph g2 = graph.copy();
				g2.removeVertex(v);
				for (Vertex destination : des) {
					int state = Integer.parseInt(destination.getId());

					List<Edge> path = g2.getAccessSequence(state);
					if (path != null) {
						findings.add("There exists a path around the login screen: state " + v.getId() + " : " + state + " : "
								+ path + "\n");
						this.setIdentified(1); // Likely vulnerability is
												// present
					}
				}
				
				////////////////////////////
				
				ArrayList<String> callableActivities = apkinfo.getPublicAPK().getCallableActivitiesMinusStart();
				List<Vertex> path = graph.getAccessSequenceVertexes(id);
				
				for(Vertex el : path){
					if(callableActivities.contains(el.getActivity())){
						callableActivities.remove(el.getActivity());
					}
					if (callableActivities.isEmpty()){
						findings.add("There are one or more activities around the login screen: state " + id + " : "
								+ callableActivities + "\n");
						this.setIdentified(1); // Likely vulnerability is
												// present
					}
				}
				
				
			}
		}
		
		
		
		
		
	}
}
